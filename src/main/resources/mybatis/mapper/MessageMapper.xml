<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="top.chriszwz.community.dao.MessageMapper">

    <sql id="selectFields">
        id, from_id, to_id, conversation_id, content, status, create_time
    </sql>
    <sql id="insertFields">
        from_id, to_id, conversation_id, content, status, create_time
    </sql>

    <insert id="insertMessage" parameterType="Message" keyProperty="id">
        insert into message(<include refid="insertFields"/>)
        values(#{from_id}, #{to_id}, #{conversation_id}, #{content}, #{status}, #{create_time})
    </insert>

    <update id="updateStatus">
        update message set status = #{status}
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <select id="selectConversations" resultType="Message">
        select <include refid="selectFields"/>
        from message
        where id in (
            select max(id)
            from message
            where status != 2
            and from_id != 1
            and (from_id = #{user_id} or to_id = #{user_id})
            group by conversation_id
        )
        order by create_time desc
        limit #{offset}, #{limit}
    </select>

    <select id="selectConversationsCount" resultType="int">
        select count(m.maxid)
        from (
            select max(id) as maxid
            from message
            where status != 2
            and from_id != 1
            and (from_id = #{user_id} or to_id = #{user_id})
            group by conversation_id
        ) as m
    </select>

    <select id="selectLetters" resultType="Message">
        select <include refid="selectFields"/>
        from message
        where status != 2
        and from_id != 1
        and conversation_id = #{conversation_id}
        order by id desc
        limit #{offset}, #{limit}
    </select>

    <select id="selectLetterCount" resultType="int">
        select count(id) from message
        where status != 2
        and from_id != 1
        and conversation_id = #{conversation_id}
    </select>

    <select id="selectLetterUnreadCount" resultType="int">
        select count(id) from message
        where status != 2
        and from_id != 1
        and to_id = #{user_id}
        <if test="conversation_id!=null">
            and conversation_id = #{conversation_id}
        </if>
    </select>


</mapper>